/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  6.0                                   |
|   \\  /    A nd           | Website:  https://openfoam.org                  |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      constitutiveProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

parameters
{ 

	rho		rho [1 -3 0 0 0 0 0] 900.;
	etaS		etaS [1 -1 -1 0 0 0 0] 0.1;
	etaP		etaP [1 -1 -1 0 0 0 0] 0.9;                               
	lambda		lambda [0 0 1 0 0 0 0] 1;
	
	type		PTTexp;
	elastEnergDiss	elastEnergDiss [0 0 0 0 0 0 0] 1;
        epsilon		epsilon [0 0 0 0 0 0 0] 0.02;  
        zeta		zeta [0 0 0 0 0 0 0] 0.;

	//type		FENE-CR;
	//L2		L2 [0 0 0 0 0 0 0] 100;
	//solveInTau	true;
	//modifiedForm	false;

	//stabilization none;
	stabilization	coupling;
}

passiveScalarProperties {
	solvePassiveScalar	false;
	D			D [ 0 2 -1 0 0 0 0 ] 2e-3;
}

thermophysicalProperties {
	T0		T0 [0 0 0 1 0 0 0] 463.15;
   
   	etaSThermFun    constant;
	etaSThermFunCoefficients {
	  etaS0		etaS0 [1 -1 -1 0 0 0 0] 0.1;
	};

	etaPThermFun	Arrhenius;
	etaPThermFunCoefficients {
		etaP0	etaP0 [1 -1 -1 0 0 0 0] 0.9;
		c1	c1 [0 0 0 1 0 0 0] 1.72e+3;
	};

	lambdaThermFun      Arrhenius;
	lambdaThermFunCoefficients {
		lambda0	lambda0 [0 0 1 0 0 0 0] 1;
		c1	c1 [0 0 0 1 0 0 0] 1.72e+3;
	};

	cpThermFun	LinearFit;
	cpThermFunCoefficients {
		cp0	cp0 [0 2 -2 -1 0 0 0] 400.;
		//c1	c1 [0 0 0 0 0 0 0] 1.2122;  // for (c1_ + c2_*T)
		c1      c1 [0 0 0 0 0 0 0] 0.693472;  // for (c1_ + c2_*(T-T0))
		c2      c2 [0 0 0 -1 0 0 0] -1.12e-3;
	};

	ktThermFun	LinearFit;
	ktThermFunCoefficients {
		kt0	kt0 [1 1 -3 -1 0 0 0] 8e-2;
		//c1	c1 [0 0 0 0 0 0 0] 0.7753;  // for (c1_ + c2_*T)
		c1	c1 [0 0 0 0 0 0 0] 1.321817;  // for (c1_ + c2_*(T-T0))
		c2	c2 [0 0 0 -1 0 0 0] 1.18e-3;
	};
}

}
// ************************************************************************* //
